// row and column definitions
@use 'sass:list';

.row {
  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  margin: 0 (-($grid-gutter / 2));

  &.reverse {
    flex-direction: row-reverse;
  }

  &.no-gutter {
    margin: 0;
  }

  &.justify {
    &-center {
      justify-content: center;
    }

    &-end {
      justify-content: flex-end;
    }

    &-between {
      justify-content: space-between;
    }

    &-around {
      justify-content: space-around;
    }

    &-evenly {
      justify-content: space-evenly;
    }
  }

  &.align {
    &-start {
      align-items: flex-start;
    }

    &-center {
      align-items: center;
    }

    &-end {
      align-items: flex-end;
    }

    &-stretch {
      align-items: stretch;
    }

    &-baseline {
      align-items: baseline;
    }
  }
}

[class^="col"] {
  align-items: flex-start;
  display: flex;
  flex: 1 1 0;
  padding: 0 ($grid-gutter / 2);

  .no-gutter > & {
    padding: 0;
  }

  &.align {
    &-start {
      align-self: flex-start;
    }

    &-center {
      align-self: center;
    }

    &-end {
      align-self: flex-end;
    }

    &-stretch {
      align-self: stretch;
    }

    &-baseline {
      align-self: baseline;
    }
  }
}

// col breakpoints

@each $step in $grid-steps {
  .col-#{$step} {
    flex: 0 0 auto;
    width: #{($step / list.length($grid-steps)) * 100%};
  }
}

@each $breakpoint, $size in $grid-breakpoints {
  @media (min-width: #{$size}) {
    @each $step in $grid-steps {
      .col-#{$breakpoint}-#{$step} {
        flex: 0 0 auto;
        width: #{($step / list.length($grid-steps)) * 100%};
      }
    }
  }
} 